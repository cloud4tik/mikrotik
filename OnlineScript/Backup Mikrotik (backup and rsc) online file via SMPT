#Backup Mikrotik v.5.1 Extensi (backup and rsc) online file via SMPT (online script)
#=============================================================

:local iden [/sys iden get name]

:local date [/sys clo get date ];
:local time [/sys clo get time ];
:local model [/sys rou get model]
:local board [/sys reso get board-name];
:local factory [/sys reso get factory-software];
:local version [/sys reso get version];
:local pack [/sys reso get architecture-name];
:local dns [/ip clo get dns-name]
:local b ("backup")
:local r ("rsc")
:local d ("Backup Data")
:local bm ("Backup Mikrotik")
:local dayNip ("get-day-and-ip")

:local day [ :pick $date 4 6 ]
:local mon [ :pick $date 0 3 ]
:local year [ :pick $date 7 11 ]
:local fnama ("$iden_$day-$mon-$year")

if ([/sys scr find name="$dayNip"] = "") do={
if ([/file find name="$dayNip"] != "" ) do={/file remove [find name="$dayNip"]}
/tool fetch url="https://raw.githubusercontent.com/cloud4tik/mikrotik/main/OnlineScript/get%20day%20and%20ip" mode=https src-path="/" dst-path="/$dayNip"
:delay 2s
:local fdayNip [/file get [find name="$dayNip"] contents]
:delay 2s
/sys scr add name="$dayNip" comment="$dayNip" owner="$iden" source="$fdayNip"
:delay 2s
/sys scr run [find name="$dayNip"]
} else {
  /sys scr run [find name="$dayNip"]
}

:local data [/sys scr get [find name="Backup Data"] source]
#parse
:local datalen [:len [:pick $data 0 [:find $isi "#"]]]
:local address [:pick $data ($datalen + 0) [:find $data "##"]];
:local addresslen ([:len [:pick $data 0 [:find $data "##"]]] +2)
:local login [:pick $data $addresslen [:find $data "###"]]
:local loginlen ([:len [:pick $data 0 [:find $data "###"]]] +3)
:local password [:pick $data $loginlen [:find $data "####"]]
:local passwordlen ([:len [:pick $data 0 [:find $data "####"]]] +4)
:local port [:pick $data $passwordlen [:find $data "#####"]]
:local portlen ([:len [:pick $data 0 [:find $data "#####"]]] +5)
:local sendto [:pick $data $portlen [:find $data "######"]]
:local sendtolen ([:len [:pick $data 0 [:find $data "######"]]] +6)
:local path [:pick $data $sendtolen [:find $data "#######"]]

/tool e-mail set address=[:resolve $address] from="<$login>" password=$password port=$port start-tls=yes user=$login

:local currentIP [/ip firewall filter get [find  comment=public] dst-address];
:local newIP [/file get [find name="newIP"] content]

:delay 3s
:log warning "Mikrotik backup is begin please wait a moment..."

/system backup save name="$fnama"
:delay 15s
/tool e-mail send to="$sendto" subject="New $iden $b file, $date $time" body="MikroTik Backup >> file-type: $b | date: $date | time: $time | ip: $newIP | dns-name: $dns | router-name: $iden | router-model: $model | router-type: $board | software-package: $pack | factory-version: $factory | current-version: $version" file="$fnama.$b"
:delay 5s
if ([/file find  name="$fnama.$b"] != "" ) do={/file remove [find  name="$fnama.$b"]}

:delay 3s
export file="$fnama"
:delay 15s
/tool e-mail send to="$sendto" subject="New $iden $r file, $date $time" body="MikroTik Backup >> file-type: $b | date: $date | time: $time | ip: $newIP | dns-name: $dns | router-name: $iden | router-model: $model | router-type: $board | software-package: $pack | factory-version: $factory | current-version: $version" file="$fnama.$r"
:delay 5s
if ([/file find  name="$fnama.$r"] != "" ) do={/file remove [find  name="$fnama.$r"]}
if ([/file find  name="$bm"] != "" ) do={/file remove [find  name="$bm"]}
if ([/sys scr find  name="$d"] != "") do={/sys scr rem [find  name="$d"]}
if ([/sys scr find  name="$bm"] != "") do={/sys scr rem [find  name="$bm"]}

:log warning "Mikrotik backup successful..."
